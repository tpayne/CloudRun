<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example.cloud.run</groupId>
  <artifactId>samples.cloudrun-gcesample</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>GCE Compute Sample</name>
  <url>http://maven.apache.org</url>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.4.RELEASE</version>
  </parent>

  <properties>
    <jkube.version>1.1.1</jkube.version>
    <java.level>8</java.level>
    <gcp.projectId>defaultGCPProjectId</gcp.projectId>
    <project.compute.version>v1-rev20221206-2.0.0</project.compute.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <dependency-check-maven.version>6.1.5</dependency-check-maven.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.google.auth</groupId>
      <artifactId>google-auth-library-oauth2-http</artifactId>
      <version>0.27.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-compute</artifactId>
      <version>${project.compute.version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency> 
  </dependencies>

  <!--  To run a security/vulnerability check run 'mvn clean install -Psecurity-scans' 
        The process will take about 5-15 mins to run, so do not do it as part of normal build
        
        For more info, see 
        https://itnext.io/owasp-dependency-check-maven-vulnerabilities-java-898a9cf99f5e
  -->
  <profiles>
    <profile>
      <id>security-scans</id>
      <build>
        <plugins>
          <!-- Security scanners -->
          <plugin>
            <groupId>com.sonatype.clm</groupId>
            <artifactId>clm-maven-plugin</artifactId>
            <version>2.42.0-01</version>
            <executions>
              <execution>
                <goals>
                <goal>index</goal>
                </goals>
              </execution>
            </executions>
          </plugin>        
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>${dependency-check-maven.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <sourceDirectory>src</sourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <source>8</source>
          <target>8</target>
          <compilerId>groovy-eclipse-compiler</compilerId>
          <verbose>true</verbose>
        </configuration>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.groovy</groupId>
              <artifactId>groovy-eclipse-compiler</artifactId>
              <version>2.9.2-01</version>
            </dependency>
            <dependency>
              <groupId>org.codehaus.groovy</groupId>
              <artifactId>groovy-eclipse-batch</artifactId>
              <version>2.5.14-02</version>
            </dependency>
            <dependency>
              <groupId>com.google.code.findbugs</groupId>
              <artifactId>annotations</artifactId>
              <version>3.0.1u2</version>
            </dependency>
          </dependencies>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jkube</groupId>
        <artifactId>kubernetes-maven-plugin</artifactId>
        <version>1.1.1</version>
          <!-- Specify this is you want to make the k8 targets default into your lifecycle flow
          <executions>
            <execution>
              <id>default</id>
              <goals>
                <goal>build</goal>
                <goal>resource</goal>
                <goal>apply</goal>
              </goals>
            </execution>
          </executions>
          -->
      </plugin>
      <!-- Cloud run config -->
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>2.8.0</version>
        <configuration>
          <to>
            <image>gcr.io/${gcp.projectId}/${project.artifactId}</image>
          </to>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jkube</groupId>
        <artifactId>openshift-maven-plugin</artifactId>
        <version>1.1.1</version>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>        
          <configuration>
            <mainClass>samples.cloudrun.GCESample.GCESample</mainClass>
          </configuration>    
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
    </plugins>    
  </build>
</project>
